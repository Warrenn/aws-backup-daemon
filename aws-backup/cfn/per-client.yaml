AWSTemplateFormatVersion: '2010-09-09'
Description: Provision AWS IAM Roles Anywhere setup, client-scoped S3, SQS, SNS, SSM, and role access

Parameters:
  ClientId:
    Type: String
    Description: Unique identifier for the client (used to scope resources)

  CertificateData:
    Type: String
    Description: PEM-encoded public certificate for trust anchor (UTF-8 string)

  MaxSessionDuration:
    Type: Number
    Default: 43200
    Description: Max session duration in seconds (default 12 hours)

  VisibilityTimeout:
    Type: Number
    Default: 600
    Description: SQS message visibility timeout in seconds (default 10 minutes)

  MessageRetentionPeriod:
    Type: Number
    Default: 604800
    Description: SQS message retention period in seconds (default 7 days)

  ParamBasePath:
    Type: String
    Default: "/backup-application"
    Description: Base path for SSM parameter names

Resources:

  TrustAnchor:
    Type: AWS::RolesAnywhere::TrustAnchor
    Properties:
      Name: !Ref ClientId
      Enabled: true
      Source:
        SourceType: CERTIFICATE_BUNDLE
        SourceData:
          X509CertificateData: !Ref CertificateData

  RolesAnywhereProfile:
    Type: AWS::RolesAnywhere::Profile
    Properties:
      Name: !Ref ClientId
      Enabled: true
      RoleArns:
        - !GetAtt RolesAnywhereAssumableRole.Arn
      DurationSeconds: !Ref MaxSessionDuration
      RequireInstanceProperties: false

  RolesAnywhereAssumableRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref ClientId
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: rolesanywhere.amazonaws.com
            Action: 
             - sts:AssumeRole
             - sts:SetSourceIdentity
             - sts:TagSession
            Condition:
              StringEquals:
                aws:SourceArn: !Sub "arn:${AWS::Partition}:rolesanywhere:${AWS::Region}:${AWS::AccountId}:trust-anchor/${TrustAnchor}"
      MaxSessionDuration: !Ref MaxSessionDuration
      Path: "/"
      Policies:
        - PolicyName: !Sub "${ClientId}-AccessPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - sts:GetCallerIdentity
                  - sts:SetSourceIdentity
                  - sts:TagSession
                  - sts:GetSourceIdentity
                Resource: "*"

              - Effect: Allow
                Action:
                  - sqs:ReceiveMessage
                  - sqs:DeleteMessage
                  - sqs:SendMessage
                  - sqs:GetQueueAttributes
                Resource: !GetAtt ClientQueue.Arn

              - Effect: Allow
                Action: 
                  - sns:Publish
                  - sns:ListSubscriptionsByTopic
                  - sns:GetTopicAttributes
                Resource: !Sub "arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:${ClientId}-*"

              - Effect: Allow
                Action:
                  - ssm:DescribeParameters
                  - ssm:GetParameters
                  - ssm:GetParameter
                Resource: !Sub "arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:${ParamBasePath}/${ClientId}/*"

              - Effect: Allow
                Action:
                  - kms:Decrypt
                  - kms:GenerateDataKey
                Resource: "arn:aws:kms:*:*:key/alias/aws/ssm"

              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:DeleteObject
                  - s3:ListBucket
                  - s3:ListBucketVersions
                  - s3:GetObjectAttributes
                  - s3:RestoreObject
                Resource:
                  - !ImportValue aws-backup-initial-bucket-arn
                  - !Sub
                    - "${BucketArn}/${ClientId}/*"
                    - BucketArn: !ImportValue aws-backup-initial-bucket-arn
                      
              - Effect: Allow
                Action:
                  - s3:GetObjectTagging
                  - s3:PutObjectTagging
                  - s3:DeleteObjectTagging
                Resource:
                  - !Sub
                    - "${BucketArn}/${ClientId}/*"
                    - BucketArn: !ImportValue aws-backup-initial-bucket-arn

  ClientQueue:
    Type: AWS::SQS::Queue
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      QueueName: !Sub "${ClientId}-queue"
      VisibilityTimeout: !Ref VisibilityTimeout
      MessageRetentionPeriod: !Ref MessageRetentionPeriod
      Tags:
        - Key: client-id
          Value: !Ref ClientId

  ClientQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref ClientQueue
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !GetAtt RolesAnywhereAssumableRole.Arn
            Action:
              - sqs:ReceiveMessage
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
            Resource: !GetAtt ClientQueue.Arn

  ArchiveCompleteTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub "${ClientId}-archive-complete"
      Tags:
        - Key: client-id
          Value: !Ref ClientId
          
  RestoreCompleteTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub "${ClientId}-restore-complete"
      Tags:
        - Key: client-id
          Value: !Ref ClientId
          
  ArchiveCompleteErrorsTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub "${ClientId}-archive-complete-errors"
      Tags:
        - Key: client-id
          Value: !Ref ClientId
          
  RestoreCompleteErrorsTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub "${ClientId}-restore-complete-errors"
      Tags:
        - Key: client-id
          Value: !Ref ClientId
          
  ExceptionTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub "${ClientId}-exception"
      Tags:
        - Key: client-id
          Value: !Ref ClientId
          
  AesFileEncryptionKeyParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "${ParamBasePath}/${ClientId}/aes-file-encryption-key"
      Type: String
      Value: "PLACEHOLDER_FILE_KEY"
      Tier: Standard
      Tags:
        client-id: !Ref ClientId

  AesSqsEncryptionKeyParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "${ParamBasePath}/${ClientId}/aes-sqs-encryption-key"
      Type: String
      Value: "PLACEHOLDER_SQS_KEY"
      Tier: Standard
      Tags:
        client-id: !Ref ClientId

Outputs:
  QueueUrl:
    Description: Client-specific SQS Queue URL
    Value: !Ref ClientQueue

  QueueArn:
    Description: Client-specific SQS Queue ARN
    Value: !GetAtt ClientQueue.Arn

  TrustAnchorArn:
    Description: ARN of the Roles Anywhere Trust Anchor
    Value: !Sub "arn:${AWS::Partition}:rolesanywhere:${AWS::Region}:${AWS::AccountId}:trust-anchor/${TrustAnchor}"

  ProfileArn:
    Description: ARN of the Roles Anywhere Profile
    Value: !Sub "arn:${AWS::Partition}:rolesanywhere:${AWS::Region}:${AWS::AccountId}:profile/${RolesAnywhereProfile}"

  RoleArn:
    Description: ARN of the IAM Role assumed via Roles Anywhere
    Value: !GetAtt RolesAnywhereAssumableRole.Arn

  ArchiveCompleteTopicArn:
    Value: !Ref ArchiveCompleteTopic
  RestoreCompleteTopicArn:
    Value: !Ref RestoreCompleteTopic
  ArchiveCompleteErrorsTopicArn:
    Value: !Ref ArchiveCompleteErrorsTopic
  RestoreCompleteErrorsTopicArn:
    Value: !Ref RestoreCompleteErrorsTopic
  ExceptionTopicArn:
    Value: !Ref ExceptionTopic

  AesFileEncryptionKeyName:
    Description: Name of the SSM parameter for file encryption
    Value: !Ref AesFileEncryptionKeyParam

  AesSqsEncryptionKeyName:
    Description: Name of the SSM parameter for SQS encryption
    Value: !Ref AesSqsEncryptionKeyParam
