name: Build & Release Native AOT

on:
  push:
    tags:
      - 'v*'  # Matches v1.0.0, v2.1.3, etc.

permissions:
  contents: write

jobs:
  build-and-release-windows:
    name: Build Windows distro and publish to GitHub Releases
    runs-on: windows-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Publish aws-backup
        run: dotnet publish ./aws-backup/aws-backup.csproj -c Release -r win-x64 `
            -p:PublishAot=true `
            -p:SelfContained=true `
            -p:PublishSingleFile=true `
            -p:EnableCompressionInSingleFile=true `
            -p:DebugType=None `
            -p:DebugSymbols=false `
            -o publish

      - name: Publish cert-gen
        run: dotnet publish ./cert-gen/cert-gen.csproj -c Release -r win-x64 `
            -p:SelfContained=true `
            -p:PublishSingleFile=true `
            -p:EnableCompressionInSingleFile=true `
            -p:PublishTrimmed=false `
            -p:DebugType=None `
            -p:DebugSymbols=false `
            -o publish

      - name: Publish ssm-param
        run: dotnet publish ./ssm-param/ssm-param.csproj -c Release -r win-x64 `
            -p:SelfContained=true `
            -p:PublishSingleFile=true `
            -p:EnableCompressionInSingleFile=true `
            -p:PublishTrimmed=false `
            -p:DebugType=None `
            -p:DebugSymbols=false `
            -o publish

      - name: Publish temporary-credentials
        run: dotnet publish ./temporary-credentials/temporary-credentials.csproj -c Release -r win-x64 `
            -p:SelfContained=true `
            -p:PublishSingleFile=true `
            -p:EnableCompressionInSingleFile=true `
            -p:PublishTrimmed=false `
            -p:DebugType=None `
            -p:DebugSymbols=false `
            -o publish

      - name: Publish aws-backup-command
        run: dotnet publish ./aws-backup-commands/aws-backup-commands.csproj -c Release -r win-x64 `
            -p:PublishAot=true `
            -p:SelfContained=true `
            -p:PublishSingleFile=true `
            -p:EnableCompressionInSingleFile=true `
            -p:DebugType=None `
            -p:DebugSymbols=false `
            -o publish

      - name: Copy outputs to structured layout
        shell: pwsh
        run: |
          mkdir -Force out\cfn
          Copy-Item ./publish/* out/ -Recurse -Force
          Copy-Item ./aws-backup/cfn/* out/cfn/ -Recurse -Force

      - name: Compress to zip
        shell: pwsh
        run: |
          Compress-Archive -Path out\* -DestinationPath ./windows-aot.zip

      - name: Upload binaries to GitHub release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./windows-aot.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-release-linux:
    name: Build Linux distro using Docker and publish to GitHub Releases
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Build aot linux binaries from docker image
        run: ./build/linux-aot/build.sh
        
      - name: Create release files for linux aot tar.gz
        run: |
          cd ./linux-aot-output/publish
          tar -czf ../../linux-aot.tar.gz .

      - name: Build linux binaries from docker image
        run: ./build/linux/build.sh
        
      - name: Create release files for linux tar.gz
        run: |
          cd ./linux-output/publish
          tar -czf ../../linux.tar.gz .

      - name: Upload binaries to GitHub release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./linux-aot.tar.gz
            ./linux.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
